Fri Mar  1 10:48:23 2024       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 545.23.08              Driver Version: 545.23.08    CUDA Version: 12.3     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA TITAN Xp                Off | 00000000:83:00.0 Off |                  N/A |
| 23%   23C    P8               9W / 250W |      0MiB / 12288MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
|  No running processes found                                                           |
+---------------------------------------------------------------------------------------+


* * * Run SGD for cluster size = 5. * * *


Budget: 100


* * * Run SGD for ID = 5_1. * * *


2024-03-01 10:48:25.736127: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 10:48:44.480317: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 10:48:44.482724: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2024-03-01 10:48:44.524446: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 10:48:44.524476: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 10:48:44.597735: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 10:48:44.597816: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 10:48:44.644823: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 10:48:44.736930: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 10:48:44.806566: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 10:48:44.844568: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 10:48:44.956253: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 10:48:44.957105: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 10:48:44.957205: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
<__array_function__ internals>:5: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:159: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:160: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
2024-03-01 10:48:50.227185: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-03-01 10:48:50.227704: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 10:48:50.228212: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 10:48:50.228245: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 10:48:50.228291: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 10:48:50.228311: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 10:48:50.228330: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 10:48:50.228348: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 10:48:50.228366: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 10:48:50.228385: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 10:48:50.228404: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 10:48:50.228861: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 10:48:50.228892: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 10:48:52.782332: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2024-03-01 10:48:52.782385: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2024-03-01 10:48:52.782394: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2024-03-01 10:48:52.783312: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11217 MB memory) -> physical GPU (device: 0, name: NVIDIA TITAN Xp, pci bus id: 0000:83:00.0, compute capability: 6.1)
{'id': '05_01', 'seed': 1, 'out_folder': 'results/epoch_budget', 'batch_size': 32, 'epochs': 100, 'validation_split': 0.2, 'checkpointing': True, 'initial_lr': 0.1, 'momentum': 0.98, 'nesterov': True, 'bootstrapping': False, 'map_optimizer': True, 'model': 'CNN-LSTM', 'tf_version': '2.4.1', 'keras_version': '2.4.3', 'GPU': 'NVIDIA TITAN Xp'}
Loading data...
Pad sequences (samples x time)
20000 train sequences
5000 validation sequences
25000 test sequences
x_train shape: (20000, 100)
x_val shape: (5000, 100)
x_test shape: (25000, 100)
Using MAP optimizer with reg_weight:  5e-05
CNN-LSTM
0epoch [00:00, ?epoch/s]  0%|          | 0/100 [00:00<?, ?epoch/s]2024-03-01 10:48:53.187667: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:116] None of the MLIR optimization passes are enabled (registered 2)
2024-03-01 10:48:53.199174: I tensorflow/core/platform/profile_utils/cpu_utils.cc:112] CPU Frequency: 2199825000 Hz
2024-03-01 10:48:54.638120: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 10:48:54.859955: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 10:48:56.576488: W tensorflow/stream_executor/gpu/asm_compiler.cc:63] Running ptxas --version returned 256
2024-03-01 10:48:56.605596: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: ptxas exited with non-zero error code 256, output: 
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
  1%|          | 1/100 [00:13<22:27, 13.61s/epoch, loss=0.692, accuracy=0.6, val_loss=0.497, val_accuracy=0.804]  2%|▏         | 2/100 [00:21<16:21, 10.01s/epoch, loss=0.47, accuracy=0.823, val_loss=0.462, val_accuracy=0.831]  3%|▎         | 3/100 [00:28<14:01,  8.68s/epoch, loss=0.444, accuracy=0.851, val_loss=0.489, val_accuracy=0.834]  4%|▍         | 4/100 [00:34<12:29,  7.80s/epoch, loss=0.469, accuracy=0.859, val_loss=0.556, val_accuracy=0.819]  5%|▌         | 5/100 [00:41<11:35,  7.32s/epoch, loss=0.602, accuracy=0.824, val_loss=0.83, val_accuracy=0.728]   6%|▌         | 6/100 [00:47<10:58,  7.00s/epoch, loss=0.956, accuracy=0.647, val_loss=0.956, val_accuracy=0.663]  7%|▋         | 7/100 [00:53<10:33,  6.81s/epoch, loss=0.982, accuracy=0.623, val_loss=0.941, val_accuracy=0.661]  8%|▊         | 8/100 [01:00<10:15,  6.69s/epoch, loss=0.974, accuracy=0.631, val_loss=0.983, val_accuracy=0.631]  9%|▉         | 9/100 [01:06<10:00,  6.60s/epoch, loss=1.02, accuracy=0.577, val_loss=1.03, val_accuracy=0.551]   10%|█         | 10/100 [01:13<09:48,  6.54s/epoch, loss=0.993, accuracy=0.601, val_loss=0.989, val_accuracy=0.617] 11%|█         | 11/100 [01:19<09:37,  6.48s/epoch, loss=0.988, accuracy=0.628, val_loss=0.965, val_accuracy=0.658] 12%|█▏        | 12/100 [01:25<09:27,  6.45s/epoch, loss=0.985, accuracy=0.61, val_loss=0.967, val_accuracy=0.612]  13%|█▎        | 13/100 [01:32<09:20,  6.44s/epoch, loss=0.957, accuracy=0.601, val_loss=0.983, val_accuracy=0.637] 14%|█▍        | 14/100 [01:38<09:12,  6.43s/epoch, loss=0.916, accuracy=0.63, val_loss=0.948, val_accuracy=0.584]  15%|█▌        | 15/100 [01:45<09:05,  6.42s/epoch, loss=0.888, accuracy=0.642, val_loss=0.869, val_accuracy=0.667] 16%|█▌        | 16/100 [01:51<08:59,  6.43s/epoch, loss=0.903, accuracy=0.631, val_loss=0.992, val_accuracy=0.597] 17%|█▋        | 17/100 [01:57<08:51,  6.40s/epoch, loss=0.979, accuracy=0.627, val_loss=1.03, val_accuracy=0.634]  18%|█▊        | 18/100 [02:04<08:45,  6.41s/epoch, loss=1.06, accuracy=0.6, val_loss=1.08, val_accuracy=0.586]    19%|█▉        | 19/100 [02:10<08:38,  6.40s/epoch, loss=1.08, accuracy=0.574, val_loss=1.06, val_accuracy=0.582] 20%|██        | 20/100 [02:17<08:31,  6.39s/epoch, loss=1.06, accuracy=0.561, val_loss=1.02, val_accuracy=0.573] 21%|██        | 21/100 [02:23<08:22,  6.36s/epoch, loss=0.985, accuracy=0.588, val_loss=0.947, val_accuracy=0.609] 22%|██▏       | 22/100 [02:29<08:15,  6.36s/epoch, loss=0.938, accuracy=0.602, val_loss=0.969, val_accuracy=0.611] 23%|██▎       | 23/100 [02:36<08:10,  6.37s/epoch, loss=0.948, accuracy=0.604, val_loss=0.905, val_accuracy=0.627] 24%|██▍       | 24/100 [02:42<08:04,  6.37s/epoch, loss=0.982, accuracy=0.599, val_loss=1.05, val_accuracy=0.576]  25%|██▌       | 25/100 [02:48<07:57,  6.37s/epoch, loss=1.03, accuracy=0.552, val_loss=1.06, val_accuracy=0.549]  26%|██▌       | 26/100 [02:55<07:51,  6.37s/epoch, loss=1.03, accuracy=0.548, val_loss=1.02, val_accuracy=0.564] 27%|██▋       | 27/100 [03:01<07:45,  6.37s/epoch, loss=0.963, accuracy=0.556, val_loss=0.947, val_accuracy=0.542] 28%|██▊       | 28/100 [03:07<07:39,  6.38s/epoch, loss=0.9, accuracy=0.582, val_loss=0.87, val_accuracy=0.579]    29%|██▉       | 29/100 [03:14<07:33,  6.39s/epoch, loss=0.858, accuracy=0.604, val_loss=0.831, val_accuracy=0.607] 30%|███       | 30/100 [03:20<07:27,  6.40s/epoch, loss=0.843, accuracy=0.617, val_loss=0.823, val_accuracy=0.64]  31%|███       | 31/100 [03:27<07:21,  6.39s/epoch, loss=0.825, accuracy=0.634, val_loss=0.792, val_accuracy=0.657] 32%|███▏      | 32/100 [03:33<07:14,  6.38s/epoch, loss=0.814, accuracy=0.646, val_loss=0.798, val_accuracy=0.672] 33%|███▎      | 33/100 [03:39<07:08,  6.40s/epoch, loss=0.876, accuracy=0.629, val_loss=1.06, val_accuracy=0.513]  34%|███▍      | 34/100 [03:46<07:01,  6.38s/epoch, loss=1.03, accuracy=0.614, val_loss=0.973, val_accuracy=0.616] 35%|███▌      | 35/100 [03:52<06:53,  6.36s/epoch, loss=0.96, accuracy=0.641, val_loss=1.06, val_accuracy=0.523]  36%|███▌      | 36/100 [03:59<06:46,  6.36s/epoch, loss=0.958, accuracy=0.631, val_loss=0.956, val_accuracy=0.633] 37%|███▋      | 37/100 [04:05<06:41,  6.38s/epoch, loss=0.948, accuracy=0.625, val_loss=0.94, val_accuracy=0.619]  38%|███▊      | 38/100 [04:11<06:34,  6.36s/epoch, loss=0.941, accuracy=0.604, val_loss=0.917, val_accuracy=0.604] 39%|███▉      | 39/100 [04:18<06:27,  6.36s/epoch, loss=0.91, accuracy=0.606, val_loss=0.905, val_accuracy=0.605]  40%|████      | 40/100 [04:24<06:22,  6.38s/epoch, loss=0.897, accuracy=0.61, val_loss=0.913, val_accuracy=0.606] 41%|████      | 41/100 [04:30<06:17,  6.40s/epoch, loss=0.88, accuracy=0.601, val_loss=0.892, val_accuracy=0.62]  42%|████▏     | 42/100 [04:37<06:10,  6.39s/epoch, loss=0.878, accuracy=0.607, val_loss=0.867, val_accuracy=0.625] 43%|████▎     | 43/100 [04:43<06:04,  6.39s/epoch, loss=0.86, accuracy=0.619, val_loss=0.873, val_accuracy=0.608]  44%|████▍     | 44/100 [04:50<05:57,  6.39s/epoch, loss=0.848, accuracy=0.622, val_loss=0.826, val_accuracy=0.675] 45%|████▌     | 45/100 [04:56<05:50,  6.38s/epoch, loss=0.848, accuracy=0.643, val_loss=0.921, val_accuracy=0.618] 46%|████▌     | 46/100 [05:02<05:44,  6.38s/epoch, loss=0.876, accuracy=0.622, val_loss=0.87, val_accuracy=0.614]  47%|████▋     | 47/100 [05:09<05:37,  6.37s/epoch, loss=0.867, accuracy=0.605, val_loss=0.871, val_accuracy=0.551] 48%|████▊     | 48/100 [05:15<05:30,  6.36s/epoch, loss=0.895, accuracy=0.578, val_loss=0.912, val_accuracy=0.566] 49%|████▉     | 49/100 [05:21<05:24,  6.36s/epoch, loss=0.899, accuracy=0.584, val_loss=0.861, val_accuracy=0.591] 50%|█████     | 50/100 [05:28<05:17,  6.36s/epoch, loss=0.867, accuracy=0.618, val_loss=0.879, val_accuracy=0.621] 51%|█████     | 51/100 [05:34<05:12,  6.38s/epoch, loss=0.898, accuracy=0.595, val_loss=0.947, val_accuracy=0.513] 52%|█████▏    | 52/100 [05:41<05:06,  6.38s/epoch, loss=0.929, accuracy=0.567, val_loss=0.906, val_accuracy=0.598] 53%|█████▎    | 53/100 [05:47<04:59,  6.36s/epoch, loss=0.89, accuracy=0.581, val_loss=0.886, val_accuracy=0.604]  54%|█████▍    | 54/100 [05:53<04:52,  6.37s/epoch, loss=0.874, accuracy=0.574, val_loss=0.89, val_accuracy=0.57]  55%|█████▌    | 55/100 [06:00<04:46,  6.37s/epoch, loss=0.832, accuracy=0.597, val_loss=0.803, val_accuracy=0.611] 56%|█████▌    | 56/100 [06:06<04:39,  6.36s/epoch, loss=0.807, accuracy=0.624, val_loss=0.813, val_accuracy=0.638] 57%|█████▋    | 57/100 [06:12<04:33,  6.37s/epoch, loss=0.817, accuracy=0.625, val_loss=0.783, val_accuracy=0.657] 58%|█████▊    | 58/100 [06:19<04:26,  6.35s/epoch, loss=0.836, accuracy=0.619, val_loss=0.844, val_accuracy=0.624] 59%|█████▉    | 59/100 [06:25<04:20,  6.36s/epoch, loss=0.84, accuracy=0.639, val_loss=0.889, val_accuracy=0.588]  60%|██████    | 60/100 [06:31<04:14,  6.36s/epoch, loss=0.9, accuracy=0.582, val_loss=0.866, val_accuracy=0.628]  61%|██████    | 61/100 [06:38<04:07,  6.34s/epoch, loss=0.884, accuracy=0.598, val_loss=0.829, val_accuracy=0.636] 62%|██████▏   | 62/100 [06:44<04:01,  6.35s/epoch, loss=0.821, accuracy=0.63, val_loss=0.809, val_accuracy=0.637]  63%|██████▎   | 63/100 [06:50<03:54,  6.34s/epoch, loss=0.795, accuracy=0.659, val_loss=0.819, val_accuracy=0.659] 64%|██████▍   | 64/100 [06:57<03:48,  6.34s/epoch, loss=0.847, accuracy=0.632, val_loss=0.899, val_accuracy=0.587] 65%|██████▌   | 65/100 [07:03<03:42,  6.35s/epoch, loss=0.876, accuracy=0.596, val_loss=0.849, val_accuracy=0.603] 66%|██████▌   | 66/100 [07:09<03:35,  6.35s/epoch, loss=0.854, accuracy=0.599, val_loss=0.847, val_accuracy=0.607] 67%|██████▋   | 67/100 [07:16<03:29,  6.35s/epoch, loss=0.827, accuracy=0.621, val_loss=0.79, val_accuracy=0.638]  68%|██████▊   | 68/100 [07:22<03:22,  6.34s/epoch, loss=0.806, accuracy=0.645, val_loss=0.818, val_accuracy=0.654] 69%|██████▉   | 69/100 [07:28<03:16,  6.34s/epoch, loss=0.863, accuracy=0.628, val_loss=0.976, val_accuracy=0.487] 70%|███████   | 70/100 [07:35<03:10,  6.34s/epoch, loss=0.909, accuracy=0.593, val_loss=0.885, val_accuracy=0.621] 71%|███████   | 71/100 [07:41<03:03,  6.33s/epoch, loss=0.871, accuracy=0.632, val_loss=0.866, val_accuracy=0.634] 72%|███████▏  | 72/100 [07:47<02:57,  6.34s/epoch, loss=0.881, accuracy=0.616, val_loss=0.878, val_accuracy=0.634] 73%|███████▎  | 73/100 [07:54<02:51,  6.34s/epoch, loss=0.866, accuracy=0.623, val_loss=0.861, val_accuracy=0.637] 74%|███████▍  | 74/100 [08:00<02:44,  6.34s/epoch, loss=0.852, accuracy=0.636, val_loss=1.01, val_accuracy=0.609]  75%|███████▌  | 75/100 [08:06<02:38,  6.32s/epoch, loss=1.01, accuracy=0.609, val_loss=1.12, val_accuracy=0.487]  76%|███████▌  | 76/100 [08:13<02:31,  6.32s/epoch, loss=0.998, accuracy=0.58, val_loss=0.964, val_accuracy=0.609] 77%|███████▋  | 77/100 [08:19<02:25,  6.33s/epoch, loss=0.958, accuracy=0.604, val_loss=0.928, val_accuracy=0.627] 78%|███████▊  | 78/100 [08:25<02:19,  6.34s/epoch, loss=0.949, accuracy=0.597, val_loss=0.972, val_accuracy=0.51]  79%|███████▉  | 79/100 [08:32<02:13,  6.34s/epoch, loss=0.926, accuracy=0.597, val_loss=0.9, val_accuracy=0.618]  80%|████████  | 80/100 [08:38<02:07,  6.36s/epoch, loss=0.923, accuracy=0.589, val_loss=0.896, val_accuracy=0.591] 81%|████████  | 81/100 [08:45<02:00,  6.35s/epoch, loss=0.913, accuracy=0.593, val_loss=0.949, val_accuracy=0.588] 82%|████████▏ | 82/100 [08:51<01:54,  6.35s/epoch, loss=0.884, accuracy=0.615, val_loss=0.877, val_accuracy=0.626] 83%|████████▎ | 83/100 [08:57<01:47,  6.34s/epoch, loss=0.88, accuracy=0.606, val_loss=0.859, val_accuracy=0.631]  84%|████████▍ | 84/100 [09:04<01:41,  6.36s/epoch, loss=0.908, accuracy=0.582, val_loss=0.979, val_accuracy=0.607] 85%|████████▌ | 85/100 [09:10<01:35,  6.36s/epoch, loss=0.921, accuracy=0.597, val_loss=0.918, val_accuracy=0.586] 86%|████████▌ | 86/100 [09:16<01:28,  6.34s/epoch, loss=0.894, accuracy=0.604, val_loss=0.842, val_accuracy=0.633] 87%|████████▋ | 87/100 [09:23<01:22,  6.33s/epoch, loss=0.873, accuracy=0.61, val_loss=0.938, val_accuracy=0.555]  88%|████████▊ | 88/100 [09:29<01:15,  6.33s/epoch, loss=0.9, accuracy=0.591, val_loss=0.929, val_accuracy=0.513]  89%|████████▉ | 89/100 [09:35<01:09,  6.31s/epoch, loss=0.909, accuracy=0.582, val_loss=0.898, val_accuracy=0.513] 90%|█████████ | 90/100 [09:41<01:03,  6.31s/epoch, loss=0.892, accuracy=0.583, val_loss=0.837, val_accuracy=0.631] 91%|█████████ | 91/100 [09:48<00:56,  6.33s/epoch, loss=0.862, accuracy=0.611, val_loss=1.12, val_accuracy=0.487]  92%|█████████▏| 92/100 [09:54<00:50,  6.34s/epoch, loss=1.12, accuracy=0.634, val_loss=1.1, val_accuracy=0.649]   93%|█████████▎| 93/100 [10:01<00:44,  6.35s/epoch, loss=1.09, accuracy=0.632, val_loss=1.11, val_accuracy=0.59] 94%|█████████▍| 94/100 [10:07<00:38,  6.34s/epoch, loss=1.08, accuracy=0.612, val_loss=1.06, val_accuracy=0.624] 95%|█████████▌| 95/100 [10:13<00:31,  6.36s/epoch, loss=1.01, accuracy=0.628, val_loss=0.98, val_accuracy=0.622] 96%|█████████▌| 96/100 [10:20<00:25,  6.37s/epoch, loss=0.939, accuracy=0.641, val_loss=0.965, val_accuracy=0.532] 97%|█████████▋| 97/100 [10:26<00:19,  6.37s/epoch, loss=0.904, accuracy=0.633, val_loss=0.886, val_accuracy=0.635] 98%|█████████▊| 98/100 [10:32<00:12,  6.36s/epoch, loss=0.881, accuracy=0.636, val_loss=0.866, val_accuracy=0.615] 99%|█████████▉| 99/100 [10:39<00:06,  6.36s/epoch, loss=0.871, accuracy=0.644, val_loss=0.861, val_accuracy=0.65] 100%|██████████| 100/100 [10:45<00:00,  6.34s/epoch, loss=0.866, accuracy=0.654, val_loss=0.902, val_accuracy=0.638]100%|██████████| 100/100 [10:45<00:00,  6.46s/epoch, loss=0.866, accuracy=0.654, val_loss=0.902, val_accuracy=0.638]
Test score: 0.48232758045196533
Test accuracy: 0.8375200033187866


* * * Run SGD for ID = 5_2. * * *


2024-03-01 10:59:44.473687: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 10:59:48.140214: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 10:59:48.141177: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2024-03-01 10:59:48.178156: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 10:59:48.178187: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 10:59:48.180922: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 10:59:48.180963: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 10:59:48.183027: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 10:59:48.184172: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 10:59:48.186462: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 10:59:48.187909: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 10:59:48.192296: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 10:59:48.192829: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 10:59:48.192918: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
<__array_function__ internals>:5: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:159: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:160: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
2024-03-01 10:59:53.431927: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-03-01 10:59:53.432447: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 10:59:53.433273: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 10:59:53.433308: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 10:59:53.433375: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 10:59:53.433396: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 10:59:53.433416: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 10:59:53.433437: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 10:59:53.433455: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 10:59:53.433474: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 10:59:53.433492: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 10:59:53.433950: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 10:59:53.433981: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 10:59:54.030801: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2024-03-01 10:59:54.030848: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2024-03-01 10:59:54.030857: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2024-03-01 10:59:54.031821: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11217 MB memory) -> physical GPU (device: 0, name: NVIDIA TITAN Xp, pci bus id: 0000:83:00.0, compute capability: 6.1)
{'id': '05_02', 'seed': 2, 'out_folder': 'results/epoch_budget', 'batch_size': 32, 'epochs': 100, 'validation_split': 0.2, 'checkpointing': True, 'initial_lr': 0.1, 'momentum': 0.98, 'nesterov': True, 'bootstrapping': False, 'map_optimizer': True, 'model': 'CNN-LSTM', 'tf_version': '2.4.1', 'keras_version': '2.4.3', 'GPU': 'NVIDIA TITAN Xp'}
Loading data...
Pad sequences (samples x time)
20000 train sequences
5000 validation sequences
25000 test sequences
x_train shape: (20000, 100)
x_val shape: (5000, 100)
x_test shape: (25000, 100)
Using MAP optimizer with reg_weight:  5e-05
CNN-LSTM
0epoch [00:00, ?epoch/s]  0%|          | 0/100 [00:00<?, ?epoch/s]2024-03-01 10:59:54.431068: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:116] None of the MLIR optimization passes are enabled (registered 2)
2024-03-01 10:59:54.443294: I tensorflow/core/platform/profile_utils/cpu_utils.cc:112] CPU Frequency: 2199825000 Hz
2024-03-01 10:59:55.851519: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 10:59:56.011341: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 10:59:56.691285: W tensorflow/stream_executor/gpu/asm_compiler.cc:63] Running ptxas --version returned 256
2024-03-01 10:59:56.735940: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: ptxas exited with non-zero error code 256, output: 
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
  1%|          | 1/100 [00:14<24:34, 14.89s/epoch, loss=0.664, accuracy=0.633, val_loss=0.536, val_accuracy=0.785]  2%|▏         | 2/100 [00:21<16:32, 10.12s/epoch, loss=0.474, accuracy=0.822, val_loss=0.456, val_accuracy=0.835]  3%|▎         | 3/100 [00:28<13:37,  8.43s/epoch, loss=0.42, accuracy=0.861, val_loss=0.482, val_accuracy=0.833]   4%|▍         | 4/100 [00:34<12:21,  7.73s/epoch, loss=0.409, accuracy=0.882, val_loss=0.505, val_accuracy=0.844]  5%|▌         | 5/100 [00:41<11:27,  7.24s/epoch, loss=0.411, accuracy=0.895, val_loss=0.537, val_accuracy=0.843]  6%|▌         | 6/100 [00:47<10:55,  6.97s/epoch, loss=0.439, accuracy=0.899, val_loss=0.587, val_accuracy=0.833]  7%|▋         | 7/100 [00:54<10:32,  6.80s/epoch, loss=0.503, accuracy=0.889, val_loss=0.725, val_accuracy=0.809]  8%|▊         | 8/100 [01:00<10:14,  6.68s/epoch, loss=0.727, accuracy=0.817, val_loss=0.983, val_accuracy=0.724]  9%|▉         | 9/100 [01:06<09:59,  6.59s/epoch, loss=1.2, accuracy=0.634, val_loss=1.33, val_accuracy=0.586]    10%|█         | 10/100 [01:13<09:48,  6.54s/epoch, loss=1.31, accuracy=0.562, val_loss=1.28, val_accuracy=0.562] 11%|█         | 11/100 [01:19<09:39,  6.51s/epoch, loss=1.24, accuracy=0.547, val_loss=1.17, val_accuracy=0.5]   12%|█▏        | 12/100 [01:26<09:28,  6.46s/epoch, loss=1.12, accuracy=0.549, val_loss=1.15, val_accuracy=0.528] 13%|█▎        | 13/100 [01:32<09:22,  6.46s/epoch, loss=1.04, accuracy=0.553, val_loss=1.05, val_accuracy=0.548] 14%|█▍        | 14/100 [01:38<09:14,  6.44s/epoch, loss=0.977, accuracy=0.589, val_loss=1.05, val_accuracy=0.545] 15%|█▌        | 15/100 [01:45<09:06,  6.43s/epoch, loss=0.95, accuracy=0.569, val_loss=0.938, val_accuracy=0.571] 16%|█▌        | 16/100 [01:51<08:59,  6.42s/epoch, loss=0.903, accuracy=0.574, val_loss=0.826, val_accuracy=0.646] 17%|█▋        | 17/100 [01:58<08:51,  6.41s/epoch, loss=0.893, accuracy=0.6, val_loss=0.943, val_accuracy=0.613]   18%|█▊        | 18/100 [02:04<08:46,  6.42s/epoch, loss=0.881, accuracy=0.621, val_loss=0.89, val_accuracy=0.622] 19%|█▉        | 19/100 [02:10<08:38,  6.40s/epoch, loss=0.925, accuracy=0.609, val_loss=0.966, val_accuracy=0.603] 20%|██        | 20/100 [02:17<08:30,  6.39s/epoch, loss=0.979, accuracy=0.555, val_loss=0.931, val_accuracy=0.57]  21%|██        | 21/100 [02:23<08:23,  6.37s/epoch, loss=0.937, accuracy=0.555, val_loss=0.895, val_accuracy=0.614] 22%|██▏       | 22/100 [02:29<08:18,  6.39s/epoch, loss=0.918, accuracy=0.543, val_loss=0.898, val_accuracy=0.509] 23%|██▎       | 23/100 [02:36<08:12,  6.40s/epoch, loss=0.866, accuracy=0.567, val_loss=0.843, val_accuracy=0.578] 24%|██▍       | 24/100 [02:42<08:06,  6.40s/epoch, loss=0.848, accuracy=0.555, val_loss=0.826, val_accuracy=0.579] 25%|██▌       | 25/100 [02:49<08:01,  6.42s/epoch, loss=0.8, accuracy=0.61, val_loss=0.801, val_accuracy=0.629]    26%|██▌       | 26/100 [02:55<07:54,  6.42s/epoch, loss=0.766, accuracy=0.655, val_loss=0.778, val_accuracy=0.652] 27%|██▋       | 27/100 [03:02<07:47,  6.40s/epoch, loss=0.823, accuracy=0.63, val_loss=0.886, val_accuracy=0.596]  28%|██▊       | 28/100 [03:08<07:39,  6.39s/epoch, loss=0.82, accuracy=0.653, val_loss=0.854, val_accuracy=0.638] 29%|██▉       | 29/100 [03:14<07:33,  6.39s/epoch, loss=0.873, accuracy=0.607, val_loss=0.89, val_accuracy=0.586] 30%|███       | 30/100 [03:21<07:26,  6.38s/epoch, loss=0.992, accuracy=0.593, val_loss=1.02, val_accuracy=0.589] 31%|███       | 31/100 [03:27<07:18,  6.36s/epoch, loss=1.01, accuracy=0.595, val_loss=1.01, val_accuracy=0.637]  32%|███▏      | 32/100 [03:33<07:12,  6.37s/epoch, loss=0.974, accuracy=0.613, val_loss=1.05, val_accuracy=0.561] 33%|███▎      | 33/100 [03:40<07:05,  6.36s/epoch, loss=0.921, accuracy=0.612, val_loss=0.913, val_accuracy=0.629] 34%|███▍      | 34/100 [03:46<06:59,  6.35s/epoch, loss=0.882, accuracy=0.626, val_loss=0.859, val_accuracy=0.652] 35%|███▌      | 35/100 [03:52<06:52,  6.34s/epoch, loss=0.864, accuracy=0.641, val_loss=0.864, val_accuracy=0.615] 36%|███▌      | 36/100 [03:59<06:46,  6.35s/epoch, loss=0.868, accuracy=0.646, val_loss=0.924, val_accuracy=0.561] 37%|███▋      | 37/100 [04:05<06:40,  6.36s/epoch, loss=0.987, accuracy=0.557, val_loss=1.04, val_accuracy=0.582]  38%|███▊      | 38/100 [04:11<06:33,  6.34s/epoch, loss=1.08, accuracy=0.543, val_loss=1.06, val_accuracy=0.498]  39%|███▉      | 39/100 [04:18<06:27,  6.35s/epoch, loss=1.04, accuracy=0.539, val_loss=1.04, val_accuracy=0.51]  40%|████      | 40/100 [04:24<06:21,  6.35s/epoch, loss=1.01, accuracy=0.526, val_loss=0.955, val_accuracy=0.537] 41%|████      | 41/100 [04:30<06:13,  6.33s/epoch, loss=0.95, accuracy=0.537, val_loss=0.913, val_accuracy=0.552] 42%|████▏     | 42/100 [04:37<06:07,  6.34s/epoch, loss=0.902, accuracy=0.55, val_loss=0.875, val_accuracy=0.563] 43%|████▎     | 43/100 [04:43<06:01,  6.35s/epoch, loss=0.88, accuracy=0.566, val_loss=0.881, val_accuracy=0.584] 44%|████▍     | 44/100 [04:49<05:55,  6.35s/epoch, loss=0.885, accuracy=0.56, val_loss=0.907, val_accuracy=0.518] 45%|████▌     | 45/100 [04:56<05:48,  6.33s/epoch, loss=1.03, accuracy=0.57, val_loss=1.02, val_accuracy=0.599]   46%|████▌     | 46/100 [05:02<05:40,  6.31s/epoch, loss=1.04, accuracy=0.579, val_loss=0.978, val_accuracy=0.585] 47%|████▋     | 47/100 [05:08<05:34,  6.32s/epoch, loss=0.986, accuracy=0.601, val_loss=0.948, val_accuracy=0.62] 48%|████▊     | 48/100 [05:15<05:28,  6.32s/epoch, loss=0.945, accuracy=0.613, val_loss=0.914, val_accuracy=0.619] 49%|████▉     | 49/100 [05:21<05:22,  6.32s/epoch, loss=0.896, accuracy=0.635, val_loss=0.85, val_accuracy=0.662]  50%|█████     | 50/100 [05:27<05:15,  6.31s/epoch, loss=0.882, accuracy=0.638, val_loss=0.875, val_accuracy=0.631] 51%|█████     | 51/100 [05:34<05:09,  6.31s/epoch, loss=0.88, accuracy=0.625, val_loss=0.857, val_accuracy=0.635]  52%|█████▏    | 52/100 [05:40<05:02,  6.31s/epoch, loss=0.851, accuracy=0.641, val_loss=0.834, val_accuracy=0.645] 53%|█████▎    | 53/100 [05:46<04:57,  6.33s/epoch, loss=0.869, accuracy=0.632, val_loss=0.904, val_accuracy=0.615] 54%|█████▍    | 54/100 [05:53<04:51,  6.34s/epoch, loss=0.893, accuracy=0.626, val_loss=1.06, val_accuracy=0.561]  55%|█████▌    | 55/100 [05:59<04:45,  6.36s/epoch, loss=0.948, accuracy=0.581, val_loss=0.946, val_accuracy=0.552] 56%|█████▌    | 56/100 [06:05<04:39,  6.36s/epoch, loss=0.925, accuracy=0.583, val_loss=0.907, val_accuracy=0.492] 57%|█████▋    | 57/100 [06:12<04:33,  6.36s/epoch, loss=0.864, accuracy=0.62, val_loss=0.875, val_accuracy=0.625]  58%|█████▊    | 58/100 [06:18<04:27,  6.38s/epoch, loss=0.874, accuracy=0.62, val_loss=0.887, val_accuracy=0.608] 59%|█████▉    | 59/100 [06:25<04:20,  6.37s/epoch, loss=0.867, accuracy=0.621, val_loss=0.884, val_accuracy=0.626] 60%|██████    | 60/100 [06:31<04:14,  6.36s/epoch, loss=0.886, accuracy=0.62, val_loss=0.964, val_accuracy=0.633]  61%|██████    | 61/100 [06:37<04:08,  6.37s/epoch, loss=0.992, accuracy=0.611, val_loss=1.12, val_accuracy=0.536] 62%|██████▏   | 62/100 [06:44<04:01,  6.36s/epoch, loss=0.976, accuracy=0.599, val_loss=0.94, val_accuracy=0.656] 63%|██████▎   | 63/100 [06:50<03:55,  6.36s/epoch, loss=0.979, accuracy=0.588, val_loss=0.956, val_accuracy=0.601] 64%|██████▍   | 64/100 [06:56<03:48,  6.35s/epoch, loss=0.936, accuracy=0.61, val_loss=0.934, val_accuracy=0.596]  65%|██████▌   | 65/100 [07:03<03:42,  6.36s/epoch, loss=0.946, accuracy=0.579, val_loss=0.965, val_accuracy=0.556] 66%|██████▌   | 66/100 [07:09<03:35,  6.34s/epoch, loss=0.94, accuracy=0.552, val_loss=0.91, val_accuracy=0.567]   67%|██████▋   | 67/100 [07:15<03:29,  6.35s/epoch, loss=0.892, accuracy=0.55, val_loss=0.852, val_accuracy=0.592] 68%|██████▊   | 68/100 [07:22<03:23,  6.35s/epoch, loss=0.843, accuracy=0.579, val_loss=0.816, val_accuracy=0.611] 69%|██████▉   | 69/100 [07:28<03:17,  6.36s/epoch, loss=0.804, accuracy=0.605, val_loss=0.842, val_accuracy=0.578] 70%|███████   | 70/100 [07:34<03:11,  6.37s/epoch, loss=0.805, accuracy=0.6, val_loss=0.791, val_accuracy=0.623]   71%|███████   | 71/100 [07:41<03:04,  6.37s/epoch, loss=0.792, accuracy=0.618, val_loss=0.785, val_accuracy=0.634] 72%|███████▏  | 72/100 [07:47<02:58,  6.36s/epoch, loss=0.763, accuracy=0.669, val_loss=0.799, val_accuracy=0.635] 73%|███████▎  | 73/100 [07:54<02:51,  6.34s/epoch, loss=0.796, accuracy=0.656, val_loss=0.875, val_accuracy=0.569] 74%|███████▍  | 74/100 [08:00<02:44,  6.34s/epoch, loss=0.87, accuracy=0.59, val_loss=0.847, val_accuracy=0.591]   75%|███████▌  | 75/100 [08:06<02:38,  6.33s/epoch, loss=0.85, accuracy=0.614, val_loss=0.834, val_accuracy=0.648] 76%|███████▌  | 76/100 [08:12<02:31,  6.31s/epoch, loss=0.917, accuracy=0.598, val_loss=0.899, val_accuracy=0.62] 77%|███████▋  | 77/100 [08:19<02:24,  6.30s/epoch, loss=0.929, accuracy=0.589, val_loss=0.937, val_accuracy=0.611] 78%|███████▊  | 78/100 [08:25<02:18,  6.31s/epoch, loss=0.928, accuracy=0.59, val_loss=0.911, val_accuracy=0.62]   79%|███████▉  | 79/100 [08:31<02:12,  6.32s/epoch, loss=0.892, accuracy=0.614, val_loss=0.862, val_accuracy=0.639] 80%|████████  | 80/100 [08:38<02:06,  6.31s/epoch, loss=0.852, accuracy=0.623, val_loss=0.847, val_accuracy=0.639] 81%|████████  | 81/100 [08:44<01:59,  6.30s/epoch, loss=0.866, accuracy=0.646, val_loss=0.955, val_accuracy=0.593] 82%|████████▏ | 82/100 [08:50<01:53,  6.31s/epoch, loss=0.883, accuracy=0.665, val_loss=0.93, val_accuracy=0.651]  83%|████████▎ | 83/100 [08:57<01:47,  6.31s/epoch, loss=0.934, accuracy=0.641, val_loss=0.923, val_accuracy=0.626] 84%|████████▍ | 84/100 [09:03<01:40,  6.30s/epoch, loss=0.915, accuracy=0.647, val_loss=0.887, val_accuracy=0.671] 85%|████████▌ | 85/100 [09:09<01:34,  6.30s/epoch, loss=0.924, accuracy=0.625, val_loss=0.924, val_accuracy=0.601] 86%|████████▌ | 86/100 [09:15<01:28,  6.32s/epoch, loss=0.916, accuracy=0.621, val_loss=0.91, val_accuracy=0.582]  87%|████████▋ | 87/100 [09:22<01:22,  6.32s/epoch, loss=0.911, accuracy=0.605, val_loss=0.88, val_accuracy=0.597] 88%|████████▊ | 88/100 [09:28<01:15,  6.32s/epoch, loss=0.88, accuracy=0.636, val_loss=0.863, val_accuracy=0.643] 89%|████████▉ | 89/100 [09:34<01:09,  6.33s/epoch, loss=0.883, accuracy=0.649, val_loss=0.893, val_accuracy=0.644] 90%|█████████ | 90/100 [09:41<01:03,  6.33s/epoch, loss=0.878, accuracy=0.649, val_loss=0.9, val_accuracy=0.626]   91%|█████████ | 91/100 [09:47<00:56,  6.32s/epoch, loss=0.888, accuracy=0.634, val_loss=0.914, val_accuracy=0.603] 92%|█████████▏| 92/100 [09:53<00:50,  6.30s/epoch, loss=0.92, accuracy=0.599, val_loss=0.905, val_accuracy=0.634]  93%|█████████▎| 93/100 [10:00<00:44,  6.31s/epoch, loss=0.926, accuracy=0.619, val_loss=0.948, val_accuracy=0.616] 94%|█████████▍| 94/100 [10:06<00:37,  6.31s/epoch, loss=0.95, accuracy=0.615, val_loss=1, val_accuracy=0.509]      95%|█████████▌| 95/100 [10:12<00:31,  6.30s/epoch, loss=0.924, accuracy=0.617, val_loss=0.925, val_accuracy=0.624] 96%|█████████▌| 96/100 [10:19<00:25,  6.29s/epoch, loss=0.88, accuracy=0.627, val_loss=0.917, val_accuracy=0.635]  97%|█████████▋| 97/100 [10:25<00:18,  6.28s/epoch, loss=0.934, accuracy=0.604, val_loss=0.892, val_accuracy=0.644] 98%|█████████▊| 98/100 [10:31<00:12,  6.29s/epoch, loss=0.915, accuracy=0.624, val_loss=0.942, val_accuracy=0.607] 99%|█████████▉| 99/100 [10:37<00:06,  6.29s/epoch, loss=0.903, accuracy=0.637, val_loss=0.911, val_accuracy=0.607]100%|██████████| 100/100 [10:44<00:00,  6.28s/epoch, loss=0.948, accuracy=0.573, val_loss=0.958, val_accuracy=0.615]100%|██████████| 100/100 [10:44<00:00,  6.44s/epoch, loss=0.948, accuracy=0.573, val_loss=0.958, val_accuracy=0.615]
Test score: 0.5046473145484924
Test accuracy: 0.841480016708374


* * * Run SGD for ID = 5_3. * * *


2024-03-01 11:10:44.581151: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:10:48.152981: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 11:10:48.154027: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2024-03-01 11:10:48.191572: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 11:10:48.191605: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:10:48.194281: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:10:48.194323: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 11:10:48.196295: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 11:10:48.197393: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 11:10:48.199674: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 11:10:48.201170: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 11:10:48.205413: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:10:48.205951: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 11:10:48.206041: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
<__array_function__ internals>:5: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:159: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:160: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
2024-03-01 11:10:53.451502: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-03-01 11:10:53.451968: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 11:10:53.452766: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 11:10:53.452802: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:10:53.452854: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:10:53.452878: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 11:10:53.452900: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 11:10:53.452921: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 11:10:53.452941: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 11:10:53.452962: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 11:10:53.452982: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:10:53.453487: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 11:10:53.453520: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:10:54.079433: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2024-03-01 11:10:54.079490: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2024-03-01 11:10:54.079499: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2024-03-01 11:10:54.080432: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11217 MB memory) -> physical GPU (device: 0, name: NVIDIA TITAN Xp, pci bus id: 0000:83:00.0, compute capability: 6.1)
{'id': '05_03', 'seed': 3, 'out_folder': 'results/epoch_budget', 'batch_size': 32, 'epochs': 100, 'validation_split': 0.2, 'checkpointing': True, 'initial_lr': 0.1, 'momentum': 0.98, 'nesterov': True, 'bootstrapping': False, 'map_optimizer': True, 'model': 'CNN-LSTM', 'tf_version': '2.4.1', 'keras_version': '2.4.3', 'GPU': 'NVIDIA TITAN Xp'}
Loading data...
Pad sequences (samples x time)
20000 train sequences
5000 validation sequences
25000 test sequences
x_train shape: (20000, 100)
x_val shape: (5000, 100)
x_test shape: (25000, 100)
Using MAP optimizer with reg_weight:  5e-05
CNN-LSTM
0epoch [00:00, ?epoch/s]  0%|          | 0/100 [00:00<?, ?epoch/s]2024-03-01 11:10:54.491269: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:116] None of the MLIR optimization passes are enabled (registered 2)
2024-03-01 11:10:54.503286: I tensorflow/core/platform/profile_utils/cpu_utils.cc:112] CPU Frequency: 2199825000 Hz
2024-03-01 11:10:55.982968: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:10:56.141047: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:10:56.728271: W tensorflow/stream_executor/gpu/asm_compiler.cc:63] Running ptxas --version returned 256
2024-03-01 11:10:56.756440: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: ptxas exited with non-zero error code 256, output: 
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
  1%|          | 1/100 [00:11<18:12, 11.04s/epoch, loss=0.64, accuracy=0.666, val_loss=0.476, val_accuracy=0.821]  2%|▏         | 2/100 [00:17<13:56,  8.54s/epoch, loss=0.462, accuracy=0.833, val_loss=0.449, val_accuracy=0.839]  3%|▎         | 3/100 [00:24<12:17,  7.60s/epoch, loss=0.421, accuracy=0.863, val_loss=0.537, val_accuracy=0.819]  4%|▍         | 4/100 [00:30<11:30,  7.19s/epoch, loss=0.491, accuracy=0.851, val_loss=0.68, val_accuracy=0.771]   5%|▌         | 5/100 [00:37<10:59,  6.94s/epoch, loss=0.815, accuracy=0.726, val_loss=1, val_accuracy=0.598]     6%|▌         | 6/100 [00:43<10:37,  6.78s/epoch, loss=1.09, accuracy=0.6, val_loss=1.17, val_accuracy=0.513]  7%|▋         | 7/100 [00:50<10:21,  6.68s/epoch, loss=1.12, accuracy=0.531, val_loss=1.11, val_accuracy=0.544]  8%|▊         | 8/100 [00:56<10:09,  6.62s/epoch, loss=1.05, accuracy=0.557, val_loss=1.03, val_accuracy=0.508]  9%|▉         | 9/100 [01:03<09:58,  6.57s/epoch, loss=0.99, accuracy=0.565, val_loss=0.951, val_accuracy=0.503] 10%|█         | 10/100 [01:09<09:48,  6.53s/epoch, loss=0.945, accuracy=0.576, val_loss=0.908, val_accuracy=0.613] 11%|█         | 11/100 [01:16<09:39,  6.51s/epoch, loss=0.932, accuracy=0.587, val_loss=0.915, val_accuracy=0.606] 12%|█▏        | 12/100 [01:22<09:33,  6.51s/epoch, loss=0.927, accuracy=0.593, val_loss=1.1, val_accuracy=0.578]   13%|█▎        | 13/100 [01:29<09:25,  6.50s/epoch, loss=0.927, accuracy=0.583, val_loss=0.902, val_accuracy=0.598] 14%|█▍        | 14/100 [01:35<09:18,  6.49s/epoch, loss=0.886, accuracy=0.617, val_loss=0.944, val_accuracy=0.557] 15%|█▌        | 15/100 [01:42<09:11,  6.49s/epoch, loss=0.894, accuracy=0.608, val_loss=0.936, val_accuracy=0.501] 16%|█▌        | 16/100 [01:48<09:04,  6.48s/epoch, loss=0.897, accuracy=0.624, val_loss=0.907, val_accuracy=0.602] 17%|█▋        | 17/100 [01:54<08:55,  6.46s/epoch, loss=0.883, accuracy=0.643, val_loss=1, val_accuracy=0.575]     18%|█▊        | 18/100 [02:01<08:48,  6.44s/epoch, loss=0.935, accuracy=0.588, val_loss=0.895, val_accuracy=0.612] 19%|█▉        | 19/100 [02:07<08:40,  6.43s/epoch, loss=0.913, accuracy=0.59, val_loss=0.958, val_accuracy=0.51]   20%|██        | 20/100 [02:14<08:35,  6.44s/epoch, loss=0.915, accuracy=0.575, val_loss=0.874, val_accuracy=0.63] 21%|██        | 21/100 [02:20<08:27,  6.43s/epoch, loss=0.862, accuracy=0.621, val_loss=0.853, val_accuracy=0.614] 22%|██▏       | 22/100 [02:27<08:20,  6.41s/epoch, loss=0.848, accuracy=0.635, val_loss=0.869, val_accuracy=0.633] 23%|██▎       | 23/100 [02:33<08:13,  6.40s/epoch, loss=0.815, accuracy=0.649, val_loss=0.869, val_accuracy=0.573] 24%|██▍       | 24/100 [02:39<08:06,  6.40s/epoch, loss=0.837, accuracy=0.631, val_loss=0.828, val_accuracy=0.631] 25%|██▌       | 25/100 [02:46<07:59,  6.40s/epoch, loss=0.843, accuracy=0.636, val_loss=0.832, val_accuracy=0.649] 26%|██▌       | 26/100 [02:52<07:55,  6.42s/epoch, loss=0.818, accuracy=0.656, val_loss=0.802, val_accuracy=0.686] 27%|██▋       | 27/100 [02:59<07:47,  6.41s/epoch, loss=0.81, accuracy=0.668, val_loss=0.849, val_accuracy=0.653]  28%|██▊       | 28/100 [03:05<07:42,  6.42s/epoch, loss=0.829, accuracy=0.668, val_loss=0.861, val_accuracy=0.643] 29%|██▉       | 29/100 [03:11<07:34,  6.40s/epoch, loss=0.818, accuracy=0.684, val_loss=0.827, val_accuracy=0.637] 30%|███       | 30/100 [03:18<07:29,  6.42s/epoch, loss=0.834, accuracy=0.646, val_loss=0.886, val_accuracy=0.597] 31%|███       | 31/100 [03:24<07:22,  6.41s/epoch, loss=0.858, accuracy=0.646, val_loss=0.892, val_accuracy=0.618] 32%|███▏      | 32/100 [03:31<07:15,  6.40s/epoch, loss=0.862, accuracy=0.653, val_loss=0.936, val_accuracy=0.617] 33%|███▎      | 33/100 [03:37<07:09,  6.41s/epoch, loss=0.857, accuracy=0.652, val_loss=0.889, val_accuracy=0.624] 34%|███▍      | 34/100 [03:43<07:03,  6.42s/epoch, loss=0.848, accuracy=0.662, val_loss=0.846, val_accuracy=0.646] 35%|███▌      | 35/100 [03:50<06:57,  6.42s/epoch, loss=0.838, accuracy=0.648, val_loss=0.87, val_accuracy=0.576]  36%|███▌      | 36/100 [03:56<06:51,  6.43s/epoch, loss=0.854, accuracy=0.649, val_loss=0.856, val_accuracy=0.627] 37%|███▋      | 37/100 [04:03<06:45,  6.43s/epoch, loss=0.839, accuracy=0.653, val_loss=0.867, val_accuracy=0.654] 38%|███▊      | 38/100 [04:09<06:38,  6.43s/epoch, loss=0.845, accuracy=0.665, val_loss=0.869, val_accuracy=0.65]  39%|███▉      | 39/100 [04:16<06:31,  6.42s/epoch, loss=0.816, accuracy=0.694, val_loss=0.874, val_accuracy=0.651] 40%|████      | 40/100 [04:22<06:26,  6.44s/epoch, loss=0.848, accuracy=0.705, val_loss=0.866, val_accuracy=0.687] 41%|████      | 41/100 [04:28<06:18,  6.41s/epoch, loss=0.888, accuracy=0.674, val_loss=0.895, val_accuracy=0.658] 42%|████▏     | 42/100 [04:35<06:12,  6.42s/epoch, loss=0.893, accuracy=0.665, val_loss=0.961, val_accuracy=0.619] 43%|████▎     | 43/100 [04:41<06:05,  6.40s/epoch, loss=0.919, accuracy=0.676, val_loss=0.931, val_accuracy=0.647] 44%|████▍     | 44/100 [04:48<05:58,  6.40s/epoch, loss=0.906, accuracy=0.677, val_loss=0.957, val_accuracy=0.632] 45%|████▌     | 45/100 [04:54<05:51,  6.39s/epoch, loss=0.901, accuracy=0.693, val_loss=0.967, val_accuracy=0.644] 46%|████▌     | 46/100 [05:00<05:43,  6.37s/epoch, loss=0.941, accuracy=0.675, val_loss=0.964, val_accuracy=0.634] 47%|████▋     | 47/100 [05:07<05:37,  6.37s/epoch, loss=0.954, accuracy=0.662, val_loss=0.923, val_accuracy=0.63]  48%|████▊     | 48/100 [05:13<05:32,  6.39s/epoch, loss=0.91, accuracy=0.672, val_loss=0.971, val_accuracy=0.591] 49%|████▉     | 49/100 [05:19<05:25,  6.38s/epoch, loss=0.894, accuracy=0.647, val_loss=0.951, val_accuracy=0.589] 50%|█████     | 50/100 [05:26<05:18,  6.37s/epoch, loss=0.853, accuracy=0.679, val_loss=0.897, val_accuracy=0.621] 51%|█████     | 51/100 [05:32<05:12,  6.38s/epoch, loss=0.805, accuracy=0.717, val_loss=0.854, val_accuracy=0.677] 52%|█████▏    | 52/100 [05:39<05:06,  6.38s/epoch, loss=0.824, accuracy=0.7, val_loss=0.839, val_accuracy=0.684]   53%|█████▎    | 53/100 [05:45<05:00,  6.40s/epoch, loss=0.803, accuracy=0.72, val_loss=0.881, val_accuracy=0.651] 54%|█████▍    | 54/100 [05:52<04:55,  6.42s/epoch, loss=0.884, accuracy=0.678, val_loss=0.935, val_accuracy=0.633] 55%|█████▌    | 55/100 [05:58<04:48,  6.40s/epoch, loss=0.933, accuracy=0.671, val_loss=1.06, val_accuracy=0.621]  56%|█████▌    | 56/100 [06:04<04:41,  6.41s/epoch, loss=1.01, accuracy=0.658, val_loss=1.02, val_accuracy=0.573]  57%|█████▋    | 57/100 [06:11<04:35,  6.40s/epoch, loss=0.998, accuracy=0.639, val_loss=0.996, val_accuracy=0.635] 58%|█████▊    | 58/100 [06:17<04:30,  6.43s/epoch, loss=0.927, accuracy=0.659, val_loss=0.93, val_accuracy=0.643]  59%|█████▉    | 59/100 [06:24<04:23,  6.42s/epoch, loss=0.938, accuracy=0.634, val_loss=0.994, val_accuracy=0.644] 60%|██████    | 60/100 [06:30<04:15,  6.40s/epoch, loss=0.959, accuracy=0.631, val_loss=0.945, val_accuracy=0.642] 61%|██████    | 61/100 [06:36<04:09,  6.40s/epoch, loss=0.925, accuracy=0.645, val_loss=0.954, val_accuracy=0.579] 62%|██████▏   | 62/100 [06:43<04:03,  6.40s/epoch, loss=0.887, accuracy=0.651, val_loss=0.9, val_accuracy=0.644]   63%|██████▎   | 63/100 [06:49<03:56,  6.39s/epoch, loss=0.896, accuracy=0.654, val_loss=0.906, val_accuracy=0.648] 64%|██████▍   | 64/100 [06:55<03:49,  6.36s/epoch, loss=0.93, accuracy=0.606, val_loss=0.91, val_accuracy=0.617]   65%|██████▌   | 65/100 [07:02<03:42,  6.37s/epoch, loss=0.923, accuracy=0.58, val_loss=0.917, val_accuracy=0.507] 66%|██████▌   | 66/100 [07:08<03:36,  6.37s/epoch, loss=0.878, accuracy=0.635, val_loss=0.872, val_accuracy=0.65] 67%|██████▋   | 67/100 [07:14<03:29,  6.36s/epoch, loss=0.862, accuracy=0.639, val_loss=0.926, val_accuracy=0.602] 68%|██████▊   | 68/100 [07:21<03:23,  6.36s/epoch, loss=0.854, accuracy=0.634, val_loss=0.862, val_accuracy=0.633] 69%|██████▉   | 69/100 [07:27<03:17,  6.37s/epoch, loss=0.836, accuracy=0.645, val_loss=0.836, val_accuracy=0.622] 70%|███████   | 70/100 [07:34<03:10,  6.36s/epoch, loss=0.827, accuracy=0.655, val_loss=0.837, val_accuracy=0.662] 71%|███████   | 71/100 [07:40<03:04,  6.38s/epoch, loss=0.779, accuracy=0.69, val_loss=0.841, val_accuracy=0.652]  72%|███████▏  | 72/100 [07:46<02:58,  6.36s/epoch, loss=0.829, accuracy=0.656, val_loss=0.854, val_accuracy=0.656] 73%|███████▎  | 73/100 [07:53<02:51,  6.36s/epoch, loss=0.894, accuracy=0.618, val_loss=0.919, val_accuracy=0.616] 74%|███████▍  | 74/100 [07:59<02:45,  6.35s/epoch, loss=0.913, accuracy=0.61, val_loss=0.906, val_accuracy=0.625]  75%|███████▌  | 75/100 [08:05<02:38,  6.35s/epoch, loss=0.905, accuracy=0.614, val_loss=0.908, val_accuracy=0.607] 76%|███████▌  | 76/100 [08:12<02:32,  6.37s/epoch, loss=0.914, accuracy=0.576, val_loss=0.924, val_accuracy=0.507] 77%|███████▋  | 77/100 [08:18<02:26,  6.36s/epoch, loss=0.854, accuracy=0.616, val_loss=0.837, val_accuracy=0.612] 78%|███████▊  | 78/100 [08:24<02:19,  6.35s/epoch, loss=0.893, accuracy=0.651, val_loss=1.5, val_accuracy=0.549]   79%|███████▉  | 79/100 [08:31<02:13,  6.35s/epoch, loss=1.39, accuracy=0.667, val_loss=1.31, val_accuracy=0.687] 80%|████████  | 80/100 [08:37<02:06,  6.35s/epoch, loss=1.25, accuracy=0.675, val_loss=1.24, val_accuracy=0.643] 81%|████████  | 81/100 [08:43<02:00,  6.34s/epoch, loss=1.19, accuracy=0.648, val_loss=1.19, val_accuracy=0.609] 82%|████████▏ | 82/100 [08:50<01:54,  6.36s/epoch, loss=1.13, accuracy=0.652, val_loss=1.08, val_accuracy=0.659] 83%|████████▎ | 83/100 [08:56<01:48,  6.36s/epoch, loss=1.06, accuracy=0.643, val_loss=1.07, val_accuracy=0.583] 84%|████████▍ | 84/100 [09:03<01:41,  6.36s/epoch, loss=1.04, accuracy=0.609, val_loss=1.05, val_accuracy=0.493] 85%|████████▌ | 85/100 [09:09<01:35,  6.34s/epoch, loss=0.996, accuracy=0.597, val_loss=0.965, val_accuracy=0.601] 86%|████████▌ | 86/100 [09:15<01:28,  6.35s/epoch, loss=0.936, accuracy=0.63, val_loss=0.942, val_accuracy=0.62]   87%|████████▋ | 87/100 [09:22<01:22,  6.33s/epoch, loss=0.908, accuracy=0.655, val_loss=0.919, val_accuracy=0.626] 88%|████████▊ | 88/100 [09:28<01:16,  6.35s/epoch, loss=0.881, accuracy=0.661, val_loss=0.96, val_accuracy=0.575]  89%|████████▉ | 89/100 [09:34<01:09,  6.35s/epoch, loss=0.892, accuracy=0.624, val_loss=0.971, val_accuracy=0.597] 90%|█████████ | 90/100 [09:41<01:03,  6.35s/epoch, loss=0.866, accuracy=0.631, val_loss=0.995, val_accuracy=0.532] 91%|█████████ | 91/100 [09:47<00:57,  6.35s/epoch, loss=0.884, accuracy=0.608, val_loss=0.877, val_accuracy=0.644] 92%|█████████▏| 92/100 [09:53<00:50,  6.35s/epoch, loss=0.879, accuracy=0.614, val_loss=0.881, val_accuracy=0.613] 93%|█████████▎| 93/100 [10:00<00:44,  6.33s/epoch, loss=0.892, accuracy=0.589, val_loss=0.873, val_accuracy=0.616] 94%|█████████▍| 94/100 [10:06<00:37,  6.33s/epoch, loss=0.884, accuracy=0.61, val_loss=0.893, val_accuracy=0.607]  95%|█████████▌| 95/100 [10:12<00:31,  6.32s/epoch, loss=0.872, accuracy=0.607, val_loss=0.85, val_accuracy=0.624] 96%|█████████▌| 96/100 [10:19<00:25,  6.33s/epoch, loss=0.843, accuracy=0.63, val_loss=0.866, val_accuracy=0.507] 97%|█████████▋| 97/100 [10:25<00:19,  6.34s/epoch, loss=0.825, accuracy=0.629, val_loss=0.841, val_accuracy=0.62] 98%|█████████▊| 98/100 [10:31<00:12,  6.33s/epoch, loss=0.855, accuracy=0.627, val_loss=0.873, val_accuracy=0.563] 99%|█████████▉| 99/100 [10:38<00:06,  6.33s/epoch, loss=0.842, accuracy=0.628, val_loss=0.855, val_accuracy=0.557]100%|██████████| 100/100 [10:44<00:00,  6.34s/epoch, loss=0.837, accuracy=0.631, val_loss=0.848, val_accuracy=0.616]100%|██████████| 100/100 [10:44<00:00,  6.44s/epoch, loss=0.837, accuracy=0.631, val_loss=0.848, val_accuracy=0.616]
Test score: 0.4412296414375305
Test accuracy: 0.8442000150680542


* * * Run SGD for ID = 5_4. * * *


2024-03-01 11:21:44.520129: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:21:48.117490: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 11:21:48.118540: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2024-03-01 11:21:48.155016: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 11:21:48.155057: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:21:48.157942: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:21:48.157983: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 11:21:48.160310: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 11:21:48.161073: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 11:21:48.163336: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 11:21:48.164758: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 11:21:48.168949: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:21:48.169501: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 11:21:48.169596: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
<__array_function__ internals>:5: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:159: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:160: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
2024-03-01 11:21:53.415022: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-03-01 11:21:53.415534: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 11:21:53.416336: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 11:21:53.416384: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:21:53.416435: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:21:53.416457: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 11:21:53.416477: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 11:21:53.416498: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 11:21:53.416516: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 11:21:53.416535: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 11:21:53.416554: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:21:53.417017: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 11:21:53.417049: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:21:54.009307: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2024-03-01 11:21:54.009356: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2024-03-01 11:21:54.009365: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2024-03-01 11:21:54.010286: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11217 MB memory) -> physical GPU (device: 0, name: NVIDIA TITAN Xp, pci bus id: 0000:83:00.0, compute capability: 6.1)
{'id': '05_04', 'seed': 4, 'out_folder': 'results/epoch_budget', 'batch_size': 32, 'epochs': 100, 'validation_split': 0.2, 'checkpointing': True, 'initial_lr': 0.1, 'momentum': 0.98, 'nesterov': True, 'bootstrapping': False, 'map_optimizer': True, 'model': 'CNN-LSTM', 'tf_version': '2.4.1', 'keras_version': '2.4.3', 'GPU': 'NVIDIA TITAN Xp'}
Loading data...
Pad sequences (samples x time)
20000 train sequences
5000 validation sequences
25000 test sequences
x_train shape: (20000, 100)
x_val shape: (5000, 100)
x_test shape: (25000, 100)
Using MAP optimizer with reg_weight:  5e-05
CNN-LSTM
0epoch [00:00, ?epoch/s]  0%|          | 0/100 [00:00<?, ?epoch/s]2024-03-01 11:21:54.412405: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:116] None of the MLIR optimization passes are enabled (registered 2)
2024-03-01 11:21:54.424215: I tensorflow/core/platform/profile_utils/cpu_utils.cc:112] CPU Frequency: 2199825000 Hz
2024-03-01 11:21:55.839241: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:21:55.996096: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:21:56.761342: W tensorflow/stream_executor/gpu/asm_compiler.cc:63] Running ptxas --version returned 256
2024-03-01 11:21:56.792330: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: ptxas exited with non-zero error code 256, output: 
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
  1%|          | 1/100 [00:11<18:31, 11.23s/epoch, loss=0.668, accuracy=0.624, val_loss=0.49, val_accuracy=0.811]  2%|▏         | 2/100 [00:18<14:06,  8.63s/epoch, loss=0.467, accuracy=0.826, val_loss=0.451, val_accuracy=0.842]  3%|▎         | 3/100 [00:24<12:31,  7.75s/epoch, loss=0.435, accuracy=0.856, val_loss=0.46, val_accuracy=0.845]   4%|▍         | 4/100 [00:31<11:35,  7.25s/epoch, loss=0.506, accuracy=0.844, val_loss=0.72, val_accuracy=0.741]  5%|▌         | 5/100 [00:37<11:01,  6.96s/epoch, loss=0.882, accuracy=0.688, val_loss=1.02, val_accuracy=0.584]  6%|▌         | 6/100 [00:44<10:38,  6.79s/epoch, loss=0.998, accuracy=0.608, val_loss=0.981, val_accuracy=0.64]  7%|▋         | 7/100 [00:50<10:22,  6.70s/epoch, loss=0.994, accuracy=0.621, val_loss=1.01, val_accuracy=0.537]  8%|▊         | 8/100 [00:57<10:08,  6.62s/epoch, loss=1.03, accuracy=0.582, val_loss=1.01, val_accuracy=0.591]   9%|▉         | 9/100 [01:03<09:56,  6.55s/epoch, loss=1.04, accuracy=0.551, val_loss=1.05, val_accuracy=0.501] 10%|█         | 10/100 [01:09<09:48,  6.54s/epoch, loss=1, accuracy=0.513, val_loss=0.959, val_accuracy=0.518]  11%|█         | 11/100 [01:16<09:39,  6.52s/epoch, loss=1.04, accuracy=0.533, val_loss=1.36, val_accuracy=0.566] 12%|█▏        | 12/100 [01:22<09:31,  6.49s/epoch, loss=1.31, accuracy=0.544, val_loss=1.22, val_accuracy=0.494] 13%|█▎        | 13/100 [01:29<09:22,  6.46s/epoch, loss=1.18, accuracy=0.547, val_loss=1.11, val_accuracy=0.564] 14%|█▍        | 14/100 [01:35<09:14,  6.45s/epoch, loss=1.15, accuracy=0.545, val_loss=1.14, val_accuracy=0.498] 15%|█▌        | 15/100 [01:42<09:07,  6.44s/epoch, loss=1.11, accuracy=0.528, val_loss=1.03, val_accuracy=0.581] 16%|█▌        | 16/100 [01:48<09:01,  6.45s/epoch, loss=1.04, accuracy=0.545, val_loss=1.09, val_accuracy=0.545] 17%|█▋        | 17/100 [01:54<08:52,  6.41s/epoch, loss=1.02, accuracy=0.564, val_loss=0.982, val_accuracy=0.572] 18%|█▊        | 18/100 [02:01<08:44,  6.40s/epoch, loss=0.972, accuracy=0.581, val_loss=0.904, val_accuracy=0.643] 19%|█▉        | 19/100 [02:07<08:38,  6.40s/epoch, loss=0.932, accuracy=0.6, val_loss=0.896, val_accuracy=0.624]   20%|██        | 20/100 [02:14<08:32,  6.40s/epoch, loss=0.908, accuracy=0.604, val_loss=0.888, val_accuracy=0.647] 21%|██        | 21/100 [02:20<08:26,  6.41s/epoch, loss=0.898, accuracy=0.585, val_loss=0.883, val_accuracy=0.55]  22%|██▏       | 22/100 [02:26<08:20,  6.41s/epoch, loss=0.88, accuracy=0.57, val_loss=0.857, val_accuracy=0.576]  23%|██▎       | 23/100 [02:33<08:12,  6.39s/epoch, loss=1.57, accuracy=0.584, val_loss=2.04, val_accuracy=0.582] 24%|██▍       | 24/100 [02:39<08:06,  6.40s/epoch, loss=1.86, accuracy=0.59, val_loss=1.71, val_accuracy=0.608]  25%|██▌       | 25/100 [02:46<08:00,  6.40s/epoch, loss=1.6, accuracy=0.57, val_loss=1.47, val_accuracy=0.533]  26%|██▌       | 26/100 [02:52<07:53,  6.40s/epoch, loss=1.39, accuracy=0.558, val_loss=1.48, val_accuracy=0.499] 27%|██▋       | 27/100 [02:58<07:46,  6.39s/epoch, loss=1.21, accuracy=0.604, val_loss=1.12, val_accuracy=0.626] 28%|██▊       | 28/100 [03:05<07:39,  6.38s/epoch, loss=1.07, accuracy=0.627, val_loss=1, val_accuracy=0.637]    29%|██▉       | 29/100 [03:11<07:34,  6.40s/epoch, loss=0.949, accuracy=0.677, val_loss=0.911, val_accuracy=0.7] 30%|███       | 30/100 [03:18<07:28,  6.40s/epoch, loss=0.949, accuracy=0.654, val_loss=0.944, val_accuracy=0.654] 31%|███       | 31/100 [03:24<07:21,  6.40s/epoch, loss=0.943, accuracy=0.635, val_loss=0.96, val_accuracy=0.581]  32%|███▏      | 32/100 [03:30<07:15,  6.40s/epoch, loss=0.951, accuracy=0.639, val_loss=0.978, val_accuracy=0.628] 33%|███▎      | 33/100 [03:37<07:09,  6.41s/epoch, loss=0.995, accuracy=0.592, val_loss=0.967, val_accuracy=0.578] 34%|███▍      | 34/100 [03:43<07:02,  6.40s/epoch, loss=0.967, accuracy=0.567, val_loss=0.973, val_accuracy=0.553] 35%|███▌      | 35/100 [03:50<06:56,  6.40s/epoch, loss=0.936, accuracy=0.593, val_loss=0.899, val_accuracy=0.622] 36%|███▌      | 36/100 [03:56<06:49,  6.40s/epoch, loss=0.931, accuracy=0.603, val_loss=0.974, val_accuracy=0.561] 37%|███▋      | 37/100 [04:02<06:42,  6.39s/epoch, loss=0.934, accuracy=0.567, val_loss=0.895, val_accuracy=0.638] 38%|███▊      | 38/100 [04:09<06:36,  6.39s/epoch, loss=0.902, accuracy=0.606, val_loss=0.912, val_accuracy=0.607] 39%|███▉      | 39/100 [04:15<06:30,  6.41s/epoch, loss=0.89, accuracy=0.628, val_loss=0.851, val_accuracy=0.642]  40%|████      | 40/100 [04:22<06:24,  6.41s/epoch, loss=0.853, accuracy=0.632, val_loss=1.03, val_accuracy=0.553] 41%|████      | 41/100 [04:28<06:17,  6.40s/epoch, loss=0.882, accuracy=0.589, val_loss=0.908, val_accuracy=0.59] 42%|████▏     | 42/100 [04:34<06:10,  6.39s/epoch, loss=0.892, accuracy=0.585, val_loss=0.895, val_accuracy=0.585] 43%|████▎     | 43/100 [04:41<06:03,  6.39s/epoch, loss=0.9, accuracy=0.565, val_loss=0.932, val_accuracy=0.524]   44%|████▍     | 44/100 [04:47<05:59,  6.41s/epoch, loss=0.915, accuracy=0.556, val_loss=0.873, val_accuracy=0.616] 45%|████▌     | 45/100 [04:54<05:52,  6.41s/epoch, loss=0.899, accuracy=0.608, val_loss=0.928, val_accuracy=0.616] 46%|████▌     | 46/100 [05:00<05:45,  6.40s/epoch, loss=0.852, accuracy=0.644, val_loss=0.845, val_accuracy=0.668] 47%|████▋     | 47/100 [05:06<05:39,  6.41s/epoch, loss=0.834, accuracy=0.659, val_loss=0.877, val_accuracy=0.583] 48%|████▊     | 48/100 [05:13<05:32,  6.40s/epoch, loss=0.836, accuracy=0.642, val_loss=0.899, val_accuracy=0.522] 49%|████▉     | 49/100 [05:19<05:26,  6.40s/epoch, loss=0.854, accuracy=0.637, val_loss=0.869, val_accuracy=0.602] 50%|█████     | 50/100 [05:26<05:18,  6.38s/epoch, loss=0.866, accuracy=0.634, val_loss=0.868, val_accuracy=0.635] 51%|█████     | 51/100 [05:32<05:12,  6.37s/epoch, loss=0.866, accuracy=0.634, val_loss=0.88, val_accuracy=0.564]  52%|█████▏    | 52/100 [05:38<05:05,  6.37s/epoch, loss=0.96, accuracy=0.605, val_loss=0.94, val_accuracy=0.617]  53%|█████▎    | 53/100 [05:45<04:59,  6.37s/epoch, loss=0.922, accuracy=0.617, val_loss=0.959, val_accuracy=0.638] 54%|█████▍    | 54/100 [05:51<04:52,  6.36s/epoch, loss=0.892, accuracy=0.648, val_loss=0.92, val_accuracy=0.649]  55%|█████▌    | 55/100 [05:57<04:45,  6.34s/epoch, loss=0.868, accuracy=0.645, val_loss=0.857, val_accuracy=0.647] 56%|█████▌    | 56/100 [06:04<04:39,  6.36s/epoch, loss=0.841, accuracy=0.664, val_loss=0.852, val_accuracy=0.631] 57%|█████▋    | 57/100 [06:10<04:33,  6.35s/epoch, loss=0.862, accuracy=0.63, val_loss=0.859, val_accuracy=0.643]  58%|█████▊    | 58/100 [06:16<04:27,  6.36s/epoch, loss=0.852, accuracy=0.65, val_loss=0.854, val_accuracy=0.636] 59%|█████▉    | 59/100 [06:23<04:20,  6.36s/epoch, loss=0.855, accuracy=0.645, val_loss=0.848, val_accuracy=0.641] 60%|██████    | 60/100 [06:29<04:13,  6.35s/epoch, loss=0.862, accuracy=0.625, val_loss=0.856, val_accuracy=0.624] 61%|██████    | 61/100 [06:35<04:07,  6.36s/epoch, loss=0.872, accuracy=0.619, val_loss=1, val_accuracy=0.583]     62%|██████▏   | 62/100 [06:42<04:01,  6.36s/epoch, loss=0.958, accuracy=0.64, val_loss=0.95, val_accuracy=0.644] 63%|██████▎   | 63/100 [06:48<03:55,  6.36s/epoch, loss=0.917, accuracy=0.664, val_loss=0.893, val_accuracy=0.689] 64%|██████▍   | 64/100 [06:55<03:49,  6.37s/epoch, loss=0.93, accuracy=0.66, val_loss=0.957, val_accuracy=0.642]   65%|██████▌   | 65/100 [07:01<03:42,  6.36s/epoch, loss=0.968, accuracy=0.617, val_loss=0.947, val_accuracy=0.615] 66%|██████▌   | 66/100 [07:07<03:36,  6.36s/epoch, loss=0.935, accuracy=0.616, val_loss=0.927, val_accuracy=0.62]  67%|██████▋   | 67/100 [07:14<03:29,  6.36s/epoch, loss=0.912, accuracy=0.611, val_loss=0.884, val_accuracy=0.641] 68%|██████▊   | 68/100 [07:20<03:23,  6.36s/epoch, loss=0.9, accuracy=0.614, val_loss=0.888, val_accuracy=0.634]   69%|██████▉   | 69/100 [07:26<03:17,  6.36s/epoch, loss=0.899, accuracy=0.602, val_loss=0.878, val_accuracy=0.6] 70%|███████   | 70/100 [07:33<03:11,  6.39s/epoch, loss=0.876, accuracy=0.608, val_loss=0.855, val_accuracy=0.617] 71%|███████   | 71/100 [07:39<03:05,  6.39s/epoch, loss=0.848, accuracy=0.615, val_loss=0.824, val_accuracy=0.641] 72%|███████▏  | 72/100 [07:46<02:59,  6.39s/epoch, loss=0.94, accuracy=0.625, val_loss=1.02, val_accuracy=0.599]   73%|███████▎  | 73/100 [07:52<02:52,  6.39s/epoch, loss=0.983, accuracy=0.608, val_loss=0.955, val_accuracy=0.618] 74%|███████▍  | 74/100 [07:58<02:46,  6.41s/epoch, loss=0.928, accuracy=0.622, val_loss=0.882, val_accuracy=0.644] 75%|███████▌  | 75/100 [08:05<02:39,  6.40s/epoch, loss=0.873, accuracy=0.652, val_loss=0.856, val_accuracy=0.67]  76%|███████▌  | 76/100 [08:11<02:33,  6.40s/epoch, loss=0.867, accuracy=0.659, val_loss=0.909, val_accuracy=0.611] 77%|███████▋  | 77/100 [08:18<02:27,  6.39s/epoch, loss=0.893, accuracy=0.644, val_loss=0.93, val_accuracy=0.607]  78%|███████▊  | 78/100 [08:24<02:20,  6.39s/epoch, loss=0.926, accuracy=0.608, val_loss=0.959, val_accuracy=0.609] 79%|███████▉  | 79/100 [08:30<02:13,  6.38s/epoch, loss=0.868, accuracy=0.645, val_loss=0.858, val_accuracy=0.637] 80%|████████  | 80/100 [08:37<02:07,  6.38s/epoch, loss=0.84, accuracy=0.646, val_loss=0.837, val_accuracy=0.64]   81%|████████  | 81/100 [08:43<02:01,  6.38s/epoch, loss=0.823, accuracy=0.656, val_loss=0.817, val_accuracy=0.662] 82%|████████▏ | 82/100 [08:49<01:54,  6.36s/epoch, loss=0.819, accuracy=0.67, val_loss=0.865, val_accuracy=0.634]  83%|████████▎ | 83/100 [08:56<01:48,  6.36s/epoch, loss=0.907, accuracy=0.63, val_loss=0.94, val_accuracy=0.609]  84%|████████▍ | 84/100 [09:02<01:41,  6.35s/epoch, loss=0.929, accuracy=0.605, val_loss=0.912, val_accuracy=0.613] 85%|████████▌ | 85/100 [09:08<01:35,  6.37s/epoch, loss=0.923, accuracy=0.622, val_loss=0.918, val_accuracy=0.615] 86%|████████▌ | 86/100 [09:15<01:29,  6.36s/epoch, loss=0.907, accuracy=0.616, val_loss=0.881, val_accuracy=0.649] 87%|████████▋ | 87/100 [09:21<01:22,  6.34s/epoch, loss=0.934, accuracy=0.597, val_loss=0.906, val_accuracy=0.614] 88%|████████▊ | 88/100 [09:27<01:15,  6.32s/epoch, loss=0.884, accuracy=0.612, val_loss=0.869, val_accuracy=0.621] 89%|████████▉ | 89/100 [09:34<01:09,  6.34s/epoch, loss=0.891, accuracy=0.633, val_loss=0.881, val_accuracy=0.642] 90%|█████████ | 90/100 [09:40<01:03,  6.33s/epoch, loss=0.896, accuracy=0.597, val_loss=0.88, val_accuracy=0.565]  91%|█████████ | 91/100 [09:46<00:56,  6.32s/epoch, loss=0.86, accuracy=0.61, val_loss=0.847, val_accuracy=0.611]  92%|█████████▏| 92/100 [09:53<00:50,  6.33s/epoch, loss=0.858, accuracy=0.619, val_loss=0.93, val_accuracy=0.625] 93%|█████████▎| 93/100 [09:59<00:44,  6.34s/epoch, loss=0.92, accuracy=0.614, val_loss=0.91, val_accuracy=0.631]  94%|█████████▍| 94/100 [10:05<00:37,  6.33s/epoch, loss=0.905, accuracy=0.604, val_loss=0.93, val_accuracy=0.611] 95%|█████████▌| 95/100 [10:12<00:31,  6.33s/epoch, loss=0.894, accuracy=0.591, val_loss=0.867, val_accuracy=0.626] 96%|█████████▌| 96/100 [10:18<00:25,  6.32s/epoch, loss=0.844, accuracy=0.634, val_loss=0.923, val_accuracy=0.53]  97%|█████████▋| 97/100 [10:24<00:18,  6.31s/epoch, loss=0.848, accuracy=0.634, val_loss=0.848, val_accuracy=0.649] 98%|█████████▊| 98/100 [10:31<00:12,  6.31s/epoch, loss=0.849, accuracy=0.651, val_loss=0.796, val_accuracy=0.691] 99%|█████████▉| 99/100 [10:37<00:06,  6.33s/epoch, loss=0.836, accuracy=0.642, val_loss=0.838, val_accuracy=0.636]100%|██████████| 100/100 [10:43<00:00,  6.33s/epoch, loss=0.824, accuracy=0.654, val_loss=0.82, val_accuracy=0.643]100%|██████████| 100/100 [10:43<00:00,  6.44s/epoch, loss=0.824, accuracy=0.654, val_loss=0.82, val_accuracy=0.643]
Test score: 0.4675525426864624
Test accuracy: 0.8461599946022034


* * * Run SGD for ID = 5_5. * * *


2024-03-01 11:32:43.928692: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:32:47.591813: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 11:32:47.592814: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2024-03-01 11:32:47.630859: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 11:32:47.630892: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:32:47.633978: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:32:47.634020: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 11:32:47.636235: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 11:32:47.637483: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 11:32:47.639741: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 11:32:47.641239: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 11:32:47.645541: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:32:47.646092: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 11:32:47.646187: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
<__array_function__ internals>:5: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:159: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_train, y_train = np.array(xs[:idx]), np.array(labels[:idx])
/home/gkb738/.conda/envs/TF_KERAS_GPU/lib/python3.9/site-packages/tensorflow/python/keras/datasets/imdb.py:160: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  x_test, y_test = np.array(xs[idx:]), np.array(labels[idx:])
2024-03-01 11:32:53.038262: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE4.1 SSE4.2 AVX AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-03-01 11:32:53.038768: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2024-03-01 11:32:53.040377: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:83:00.0 name: NVIDIA TITAN Xp computeCapability: 6.1
coreClock: 1.582GHz coreCount: 30 deviceMemorySize: 11.90GiB deviceMemoryBandwidth: 510.07GiB/s
2024-03-01 11:32:53.040417: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:32:53.040506: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:32:53.040533: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2024-03-01 11:32:53.040555: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2024-03-01 11:32:53.040577: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2024-03-01 11:32:53.040599: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2024-03-01 11:32:53.040623: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2024-03-01 11:32:53.040646: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:32:53.041248: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2024-03-01 11:32:53.041287: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2024-03-01 11:32:53.646506: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2024-03-01 11:32:53.646563: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2024-03-01 11:32:53.646574: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2024-03-01 11:32:53.649835: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11217 MB memory) -> physical GPU (device: 0, name: NVIDIA TITAN Xp, pci bus id: 0000:83:00.0, compute capability: 6.1)
{'id': '05_05', 'seed': 5, 'out_folder': 'results/epoch_budget', 'batch_size': 32, 'epochs': 100, 'validation_split': 0.2, 'checkpointing': True, 'initial_lr': 0.1, 'momentum': 0.98, 'nesterov': True, 'bootstrapping': False, 'map_optimizer': True, 'model': 'CNN-LSTM', 'tf_version': '2.4.1', 'keras_version': '2.4.3', 'GPU': 'NVIDIA TITAN Xp'}
Loading data...
Pad sequences (samples x time)
20000 train sequences
5000 validation sequences
25000 test sequences
x_train shape: (20000, 100)
x_val shape: (5000, 100)
x_test shape: (25000, 100)
Using MAP optimizer with reg_weight:  5e-05
CNN-LSTM
0epoch [00:00, ?epoch/s]  0%|          | 0/100 [00:00<?, ?epoch/s]2024-03-01 11:32:54.050237: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:116] None of the MLIR optimization passes are enabled (registered 2)
2024-03-01 11:32:54.062186: I tensorflow/core/platform/profile_utils/cpu_utils.cc:112] CPU Frequency: 2199825000 Hz
2024-03-01 11:32:55.477359: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2024-03-01 11:32:55.641827: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2024-03-01 11:32:56.301885: W tensorflow/stream_executor/gpu/asm_compiler.cc:63] Running ptxas --version returned 256
2024-03-01 11:32:56.335150: W tensorflow/stream_executor/gpu/redzone_allocator.cc:314] Internal: ptxas exited with non-zero error code 256, output: 
Relying on driver to perform ptx compilation. 
Modify $PATH to customize ptxas location.
This message will be only logged once.
  1%|          | 1/100 [00:12<20:01, 12.13s/epoch, loss=0.731, accuracy=0.54, val_loss=0.624, val_accuracy=0.717]  2%|▏         | 2/100 [00:19<15:09,  9.29s/epoch, loss=0.533, accuracy=0.778, val_loss=0.533, val_accuracy=0.769]  3%|▎         | 3/100 [00:26<13:05,  8.10s/epoch, loss=0.449, accuracy=0.843, val_loss=0.478, val_accuracy=0.823]  4%|▍         | 4/100 [00:32<12:04,  7.54s/epoch, loss=0.435, accuracy=0.863, val_loss=0.506, val_accuracy=0.832]  5%|▌         | 5/100 [00:39<11:21,  7.17s/epoch, loss=0.477, accuracy=0.862, val_loss=0.602, val_accuracy=0.813]  6%|▌         | 6/100 [00:45<10:52,  6.95s/epoch, loss=0.637, accuracy=0.827, val_loss=0.853, val_accuracy=0.752]  7%|▋         | 7/100 [00:52<10:31,  6.79s/epoch, loss=1.04, accuracy=0.662, val_loss=1.22, val_accuracy=0.547]    8%|▊         | 8/100 [00:58<10:14,  6.68s/epoch, loss=1.2, accuracy=0.56, val_loss=1.2, val_accuracy=0.55]      9%|▉         | 9/100 [01:05<10:02,  6.62s/epoch, loss=1.18, accuracy=0.537, val_loss=1.12, val_accuracy=0.587] 10%|█         | 10/100 [01:11<09:49,  6.56s/epoch, loss=1.12, accuracy=0.562, val_loss=1.12, val_accuracy=0.507] 11%|█         | 11/100 [01:18<09:39,  6.51s/epoch, loss=1.07, accuracy=0.535, val_loss=1, val_accuracy=0.57]     12%|█▏        | 12/100 [01:24<09:30,  6.48s/epoch, loss=1, accuracy=0.551, val_loss=0.952, val_accuracy=0.552] 13%|█▎        | 13/100 [01:30<09:22,  6.46s/epoch, loss=0.93, accuracy=0.564, val_loss=0.904, val_accuracy=0.593] 14%|█▍        | 14/100 [01:37<09:12,  6.43s/epoch, loss=0.877, accuracy=0.594, val_loss=0.853, val_accuracy=0.649] 15%|█▌        | 15/100 [01:43<09:07,  6.44s/epoch, loss=0.876, accuracy=0.614, val_loss=0.886, val_accuracy=0.603] 16%|█▌        | 16/100 [01:50<09:00,  6.43s/epoch, loss=0.864, accuracy=0.625, val_loss=0.877, val_accuracy=0.617] 17%|█▋        | 17/100 [01:56<08:53,  6.43s/epoch, loss=0.857, accuracy=0.644, val_loss=0.93, val_accuracy=0.514]  18%|█▊        | 18/100 [02:02<08:46,  6.43s/epoch, loss=0.865, accuracy=0.645, val_loss=0.877, val_accuracy=0.641] 19%|█▉        | 19/100 [02:09<08:40,  6.43s/epoch, loss=0.881, accuracy=0.621, val_loss=0.973, val_accuracy=0.565] 20%|██        | 20/100 [02:15<08:36,  6.45s/epoch, loss=0.874, accuracy=0.612, val_loss=0.904, val_accuracy=0.5]   21%|██        | 21/100 [02:22<08:29,  6.45s/epoch, loss=0.86, accuracy=0.644, val_loss=0.862, val_accuracy=0.656] 22%|██▏       | 22/100 [02:28<08:22,  6.44s/epoch, loss=0.894, accuracy=0.643, val_loss=0.863, val_accuracy=0.695] 23%|██▎       | 23/100 [02:35<08:16,  6.44s/epoch, loss=1.17, accuracy=0.642, val_loss=1.37, val_accuracy=0.58]    24%|██▍       | 24/100 [02:41<08:11,  6.46s/epoch, loss=1.25, accuracy=0.615, val_loss=1.2, val_accuracy=0.582] 25%|██▌       | 25/100 [02:48<08:04,  6.46s/epoch, loss=1.14, accuracy=0.629, val_loss=1.09, val_accuracy=0.634] 26%|██▌       | 26/100 [02:54<07:57,  6.45s/epoch, loss=1.08, accuracy=0.601, val_loss=1.04, val_accuracy=0.598] 27%|██▋       | 27/100 [03:01<07:50,  6.44s/epoch, loss=1.01, accuracy=0.621, val_loss=1.12, val_accuracy=0.54]  28%|██▊       | 28/100 [03:07<07:42,  6.42s/epoch, loss=1, accuracy=0.603, val_loss=0.99, val_accuracy=0.616]   29%|██▉       | 29/100 [03:13<07:35,  6.42s/epoch, loss=0.929, accuracy=0.631, val_loss=0.899, val_accuracy=0.644] 30%|███       | 30/100 [03:20<07:27,  6.40s/epoch, loss=0.899, accuracy=0.661, val_loss=0.914, val_accuracy=0.646] 31%|███       | 31/100 [03:26<07:21,  6.40s/epoch, loss=0.858, accuracy=0.68, val_loss=0.878, val_accuracy=0.658]  32%|███▏      | 32/100 [03:33<07:16,  6.41s/epoch, loss=0.849, accuracy=0.674, val_loss=0.905, val_accuracy=0.636] 33%|███▎      | 33/100 [03:39<07:09,  6.41s/epoch, loss=0.908, accuracy=0.623, val_loss=0.889, val_accuracy=0.626] 34%|███▍      | 34/100 [03:45<07:02,  6.40s/epoch, loss=0.901, accuracy=0.634, val_loss=1, val_accuracy=0.492]     35%|███▌      | 35/100 [03:52<06:56,  6.41s/epoch, loss=0.907, accuracy=0.624, val_loss=0.934, val_accuracy=0.596] 36%|███▌      | 36/100 [03:58<06:49,  6.40s/epoch, loss=0.887, accuracy=0.634, val_loss=0.887, val_accuracy=0.654] 37%|███▋      | 37/100 [04:04<06:43,  6.40s/epoch, loss=0.892, accuracy=0.609, val_loss=0.909, val_accuracy=0.588] 38%|███▊      | 38/100 [04:11<06:37,  6.42s/epoch, loss=0.881, accuracy=0.609, val_loss=0.875, val_accuracy=0.63]  39%|███▉      | 39/100 [04:17<06:31,  6.42s/epoch, loss=0.844, accuracy=0.641, val_loss=0.845, val_accuracy=0.629] 40%|████      | 40/100 [04:24<06:24,  6.41s/epoch, loss=0.826, accuracy=0.661, val_loss=0.843, val_accuracy=0.627] 41%|████      | 41/100 [04:30<06:17,  6.39s/epoch, loss=0.821, accuracy=0.665, val_loss=0.851, val_accuracy=0.616] 42%|████▏     | 42/100 [04:37<06:11,  6.40s/epoch, loss=0.801, accuracy=0.676, val_loss=0.82, val_accuracy=0.648]  43%|████▎     | 43/100 [04:43<06:04,  6.39s/epoch, loss=0.801, accuracy=0.683, val_loss=1.77, val_accuracy=0.508] 44%|████▍     | 44/100 [04:49<05:58,  6.40s/epoch, loss=0.818, accuracy=0.683, val_loss=1.04, val_accuracy=0.578] 45%|████▌     | 45/100 [04:56<05:52,  6.40s/epoch, loss=0.877, accuracy=0.655, val_loss=0.931, val_accuracy=0.651] 46%|████▌     | 46/100 [05:02<05:44,  6.38s/epoch, loss=0.888, accuracy=0.665, val_loss=1.01, val_accuracy=0.649]  47%|████▋     | 47/100 [05:08<05:37,  6.37s/epoch, loss=1.04, accuracy=0.627, val_loss=1.03, val_accuracy=0.62]   48%|████▊     | 48/100 [05:15<05:31,  6.37s/epoch, loss=1.02, accuracy=0.626, val_loss=1.01, val_accuracy=0.597] 49%|████▉     | 49/100 [05:21<05:24,  6.37s/epoch, loss=0.985, accuracy=0.618, val_loss=0.982, val_accuracy=0.61] 50%|█████     | 50/100 [05:27<05:17,  6.36s/epoch, loss=0.936, accuracy=0.638, val_loss=0.971, val_accuracy=0.626] 51%|█████     | 51/100 [05:34<05:11,  6.36s/epoch, loss=0.943, accuracy=0.622, val_loss=0.927, val_accuracy=0.63]  52%|█████▏    | 52/100 [05:40<05:06,  6.38s/epoch, loss=0.92, accuracy=0.613, val_loss=0.891, val_accuracy=0.621] 53%|█████▎    | 53/100 [05:47<05:00,  6.39s/epoch, loss=0.914, accuracy=0.581, val_loss=0.919, val_accuracy=0.548] 54%|█████▍    | 54/100 [05:53<04:53,  6.39s/epoch, loss=0.899, accuracy=0.586, val_loss=0.918, val_accuracy=0.612] 55%|█████▌    | 55/100 [05:59<04:47,  6.39s/epoch, loss=0.878, accuracy=0.626, val_loss=0.888, val_accuracy=0.508] 56%|█████▌    | 56/100 [06:06<04:41,  6.40s/epoch, loss=0.864, accuracy=0.627, val_loss=0.858, val_accuracy=0.623] 57%|█████▋    | 57/100 [06:12<04:33,  6.37s/epoch, loss=0.818, accuracy=0.656, val_loss=0.8, val_accuracy=0.67]    58%|█████▊    | 58/100 [06:19<04:27,  6.37s/epoch, loss=0.848, accuracy=0.631, val_loss=0.866, val_accuracy=0.584] 59%|█████▉    | 59/100 [06:25<04:20,  6.36s/epoch, loss=0.887, accuracy=0.613, val_loss=0.913, val_accuracy=0.593] 60%|██████    | 60/100 [06:31<04:14,  6.36s/epoch, loss=0.962, accuracy=0.623, val_loss=0.971, val_accuracy=0.607] 61%|██████    | 61/100 [06:38<04:08,  6.36s/epoch, loss=0.945, accuracy=0.62, val_loss=1.03, val_accuracy=0.574]   62%|██████▏   | 62/100 [06:44<04:02,  6.37s/epoch, loss=0.919, accuracy=0.627, val_loss=0.911, val_accuracy=0.638] 63%|██████▎   | 63/100 [06:50<03:55,  6.38s/epoch, loss=0.941, accuracy=0.597, val_loss=0.99, val_accuracy=0.504]  64%|██████▍   | 64/100 [06:57<03:49,  6.36s/epoch, loss=0.993, accuracy=0.541, val_loss=0.936, val_accuracy=0.603] 65%|██████▌   | 65/100 [07:03<03:42,  6.34s/epoch, loss=0.961, accuracy=0.539, val_loss=0.962, val_accuracy=0.508] 66%|██████▌   | 66/100 [07:09<03:35,  6.35s/epoch, loss=0.915, accuracy=0.54, val_loss=0.89, val_accuracy=0.55]    67%|██████▋   | 67/100 [07:16<03:29,  6.36s/epoch, loss=0.876, accuracy=0.555, val_loss=0.861, val_accuracy=0.508] 68%|██████▊   | 68/100 [07:22<03:22,  6.34s/epoch, loss=0.842, accuracy=0.584, val_loss=0.819, val_accuracy=0.613] 69%|██████▉   | 69/100 [07:28<03:16,  6.34s/epoch, loss=0.824, accuracy=0.622, val_loss=0.903, val_accuracy=0.583] 70%|███████   | 70/100 [07:35<03:10,  6.34s/epoch, loss=0.815, accuracy=0.628, val_loss=0.791, val_accuracy=0.623] 71%|███████   | 71/100 [07:41<03:04,  6.35s/epoch, loss=0.823, accuracy=0.642, val_loss=0.843, val_accuracy=0.619] 72%|███████▏  | 72/100 [07:48<02:58,  6.36s/epoch, loss=0.834, accuracy=0.642, val_loss=0.847, val_accuracy=0.629] 73%|███████▎  | 73/100 [07:54<02:51,  6.36s/epoch, loss=0.869, accuracy=0.607, val_loss=0.898, val_accuracy=0.572] 74%|███████▍  | 74/100 [08:00<02:45,  6.37s/epoch, loss=0.858, accuracy=0.624, val_loss=0.864, val_accuracy=0.631] 75%|███████▌  | 75/100 [08:07<02:38,  6.35s/epoch, loss=0.873, accuracy=0.632, val_loss=0.903, val_accuracy=0.61]  76%|███████▌  | 76/100 [08:13<02:32,  6.35s/epoch, loss=0.891, accuracy=0.629, val_loss=0.896, val_accuracy=0.609] 77%|███████▋  | 77/100 [08:19<02:26,  6.37s/epoch, loss=0.875, accuracy=0.645, val_loss=0.899, val_accuracy=0.626] 78%|███████▊  | 78/100 [08:26<02:20,  6.37s/epoch, loss=0.867, accuracy=0.657, val_loss=0.86, val_accuracy=0.649]  79%|███████▉  | 79/100 [08:32<02:13,  6.37s/epoch, loss=0.88, accuracy=0.628, val_loss=0.905, val_accuracy=0.604] 80%|████████  | 80/100 [08:38<02:07,  6.35s/epoch, loss=0.859, accuracy=0.641, val_loss=0.86, val_accuracy=0.623] 81%|████████  | 81/100 [08:45<02:01,  6.39s/epoch, loss=0.881, accuracy=0.663, val_loss=1.04, val_accuracy=0.639] 82%|████████▏ | 82/100 [08:51<01:54,  6.38s/epoch, loss=1, accuracy=0.654, val_loss=0.973, val_accuracy=0.644]    83%|████████▎ | 83/100 [08:58<01:48,  6.37s/epoch, loss=0.934, accuracy=0.666, val_loss=0.962, val_accuracy=0.601] 84%|████████▍ | 84/100 [09:04<01:42,  6.38s/epoch, loss=0.935, accuracy=0.642, val_loss=0.947, val_accuracy=0.632] 85%|████████▌ | 85/100 [09:10<01:35,  6.39s/epoch, loss=0.926, accuracy=0.645, val_loss=1.07, val_accuracy=0.553]  86%|████████▌ | 86/100 [09:17<01:29,  6.38s/epoch, loss=0.918, accuracy=0.617, val_loss=0.951, val_accuracy=0.584] 87%|████████▋ | 87/100 [09:23<01:22,  6.38s/epoch, loss=0.878, accuracy=0.647, val_loss=0.847, val_accuracy=0.675] 88%|████████▊ | 88/100 [09:29<01:16,  6.37s/epoch, loss=0.856, accuracy=0.676, val_loss=0.903, val_accuracy=0.629] 89%|████████▉ | 89/100 [09:36<01:10,  6.38s/epoch, loss=0.874, accuracy=0.669, val_loss=0.915, val_accuracy=0.622] 90%|█████████ | 90/100 [09:42<01:03,  6.37s/epoch, loss=0.899, accuracy=0.657, val_loss=0.906, val_accuracy=0.646] 91%|█████████ | 91/100 [09:49<00:57,  6.37s/epoch, loss=0.884, accuracy=0.669, val_loss=0.901, val_accuracy=0.639] 92%|█████████▏| 92/100 [09:55<00:51,  6.39s/epoch, loss=0.874, accuracy=0.664, val_loss=0.896, val_accuracy=0.654] 93%|█████████▎| 93/100 [10:01<00:44,  6.37s/epoch, loss=0.934, accuracy=0.621, val_loss=0.926, val_accuracy=0.629] 94%|█████████▍| 94/100 [10:08<00:38,  6.36s/epoch, loss=0.941, accuracy=0.619, val_loss=0.976, val_accuracy=0.589] 95%|█████████▌| 95/100 [10:14<00:31,  6.35s/epoch, loss=0.964, accuracy=0.599, val_loss=1.11, val_accuracy=0.551]  96%|█████████▌| 96/100 [10:20<00:25,  6.34s/epoch, loss=0.95, accuracy=0.594, val_loss=1.03, val_accuracy=0.593]  97%|█████████▋| 97/100 [10:27<00:19,  6.34s/epoch, loss=0.966, accuracy=0.588, val_loss=0.963, val_accuracy=0.603] 98%|█████████▊| 98/100 [10:33<00:12,  6.36s/epoch, loss=1.04, accuracy=0.575, val_loss=1.1, val_accuracy=0.576]    99%|█████████▉| 99/100 [10:39<00:06,  6.36s/epoch, loss=1.06, accuracy=0.556, val_loss=1.01, val_accuracy=0.58]100%|██████████| 100/100 [10:46<00:00,  6.35s/epoch, loss=0.977, accuracy=0.585, val_loss=0.99, val_accuracy=0.509]100%|██████████| 100/100 [10:46<00:00,  6.46s/epoch, loss=0.977, accuracy=0.585, val_loss=0.99, val_accuracy=0.509]
Test score: 0.4876430928707123
Test accuracy: 0.8407999873161316
